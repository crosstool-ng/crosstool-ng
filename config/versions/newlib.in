#
# DO NOT EDIT! This file is automatically generated.
#

# The component directory name
config NEWLIB_DIR_NAME
    string
    default "newlib"


choice
    bool "Show newlib versions from"

config NEWLIB_USE_REDHAT
    bool "RedHat"
    help
      newlib from RedHat.

config NEWLIB_USE_LINARO
    bool "Linaro"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    help
      Linaro is maintaining some advanced/more stable/experimental versions
      of binutils, gcc, glibc and gdb, especially for the ARM architecture.
      These versions contain some changes that are not (yet?) merged into
      their respective upstream repositories.

endchoice

config NEWLIB_USE
    string
    default "NEWLIB" if NEWLIB_USE_REDHAT
    default "NEWLIB_LINARO" if NEWLIB_USE_LINARO


if NEWLIB_USE_REDHAT

config NEWLIB_PKG_NAME
    string
    default "newlib"

choice
    bool "Source of newlib"

config NEWLIB_SRC_RELEASE
    bool "Released tarball"
    help
      Download a released tarball.

config NEWLIB_SRC_DEVEL
    bool "Vendor/custom repository"
    depends on EXPERIMENTAL
    help
      Check out from a repository.
      Default is the vendor repository at git://sourceware.org/git/newlib-cygwin.git

if NEWLIB_SRC_DEVEL

choice
    bool "VCS type"
    default NEWLIB_DEVEL_VCS_git
    help
      Version control system from which the sources will be checked out.
      The default value points to the development repository for newlib.

config NEWLIB_DEVEL_VCS_git
    bool "Git"

config NEWLIB_DEVEL_VCS_svn
    bool "Subversion"

config NEWLIB_DEVEL_VCS_hg
    bool "Mercurial"

config NEWLIB_DEVEL_VCS_cvs
    bool "CVS"

endchoice

config NEWLIB_DEVEL_VCS
    string
    default "git" if NEWLIB_DEVEL_VCS_git
    default "svn" if NEWLIB_DEVEL_VCS_svn
    default "hg" if NEWLIB_DEVEL_VCS_hg
    default "cvs" if NEWLIB_DEVEL_VCS_cvs

config NEWLIB_DEVEL_URL
    string "Repository URL"
    default "git://sourceware.org/git/newlib-cygwin.git"
    help
      Repository URL.

      For CVS, enter both the value of CVS root and the module name, separated
      by a space.

config NEWLIB_DEVEL_BRANCH
    string "Branch/tag to check out"
    default ""
    help
      Git/CVS: branch/tag to be checked out
      Subversion: directories to append to the repository URL (i.e. branch or tag)
      Mercurial: official guide recommends using separate repositories to maintain
      stable branches. You likely need to change the repository URL, rather than
      enter anything here.

config NEWLIB_DEVEL_REVISION
    string "Revision/changeset"
    default ""
    help
      Commit ID or revision ID to check out.
      Git: enter the commit ID to check out a commit.
      CVS: enter the date in "YYYY/MM/DD HH:MM:SS" format (UTC) to check out certain date.
      Subversion: enter the revision.

config NEWLIB_DEVEL_SUBDIR
    string "Subdirectory in the repository"
    default ""
    help
      Some projects produce releases not from the top-level directory in the
      repository, but rather from some subdirectory. If it is the case,
      specify this subdirectory here.

config NEWLIB_DEVEL_BOOTSTRAP
    string "Bootstrap command"
    default ""
    help
      Command to run after checking out. Some projects don't store the generated
      files like configure script in the repository; building out of a checked out
      working copy thus requires some extra steps. Separate multiple shell commands
      with &&.

endif

config NEWLIB_SRC_CUSTOM
    bool "Custom location"
    depends on EXPERIMENTAL
    help
      Custom directory or tarball.

if NEWLIB_SRC_CUSTOM

config NEWLIB_CUSTOM_LOCATION
    string "Custom source location"
    help
      Path to the directory or tarball with the sources.

endif

endchoice

choice
    bool "Version of newlib"
    help
      For a released version, select the version of newlib to download
      and build. For sources out of the vendor repository or from a custom
      location, select the version that describes those custom sources.
      Based on this version, crosstool-NG may apply some version-specific
      quirks while building newlib.

config NEWLIB_VERY_NEW
    bool "newer than anything below"
    depends on EXPERIMENTAL
    depends on NEWLIB_SRC_DEVEL || NEWLIB_SRC_CUSTOM
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_5_0
    bool "2.5.0.20170922"
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_4_0
    bool "2.4.0.20161025 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_3_0
    bool "2.3.0.20160226 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_2_0
    bool "2.2.0.20151023 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_1_0
    bool "2.1.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_2_0_0
    bool "2.0.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_older
    depends on !NEWLIB_REQUIRE_2_1_or_later
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_V_1_20_0
    bool "1.20.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_older
    depends on !NEWLIB_REQUIRE_2_1_or_later
    select NEWLIB_2_0_or_older
    depends on !NEWLIB_REQUIRE_2_0_or_later

config NEWLIB_V_1_19_0
    bool "1.19.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_older
    depends on !NEWLIB_REQUIRE_2_1_or_later
    select NEWLIB_2_0_or_older
    depends on !NEWLIB_REQUIRE_2_0_or_later

config NEWLIB_V_1_18_0
    bool "1.18.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_older
    depends on !NEWLIB_REQUIRE_2_1_or_later
    select NEWLIB_2_0_or_older
    depends on !NEWLIB_REQUIRE_2_0_or_later

config NEWLIB_V_1_17_0
    bool "1.17.0 (OBSOLETE)"
    depends on OBSOLETE
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_older
    depends on !NEWLIB_REQUIRE_2_1_or_later
    select NEWLIB_2_0_or_older
    depends on !NEWLIB_REQUIRE_2_0_or_later

config NEWLIB_VERY_OLD
    bool "older than anything above"
    depends on OBSOLETE && EXPERIMENTAL
    depends on NEWLIB_SRC_DEVEL || NEWLIB_SRC_CUSTOM
    depends on !NEWLIB_REQUIRE_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_later

endchoice


config NEWLIB_VERSION
    string
    default "2.5.0.20170922" if NEWLIB_V_2_5_0
    default "2.4.0.20161025" if NEWLIB_V_2_4_0
    default "2.3.0.20160226" if NEWLIB_V_2_3_0
    default "2.2.0.20151023" if NEWLIB_V_2_2_0
    default "2.1.0" if NEWLIB_V_2_1_0
    default "2.0.0" if NEWLIB_V_2_0_0
    default "1.20.0" if NEWLIB_V_1_20_0
    default "1.19.0" if NEWLIB_V_1_19_0
    default "1.18.0" if NEWLIB_V_1_18_0
    default "1.17.0" if NEWLIB_V_1_17_0
    default "new" if NEWLIB_VERY_NEW
    default "old" if NEWLIB_VERY_OLD
    default "unknown"

config NEWLIB_MIRRORS
    string
    default "ftp://sourceware.org/pub/newlib"

config NEWLIB_ARCHIVE_FILENAME
    string
    default "@{pkg_name}-@{version}"

config NEWLIB_ARCHIVE_DIRNAME
    string
    default "@{pkg_name}-@{version}"

config NEWLIB_ARCHIVE_FORMATS
    string
    default ".tar.gz"

config NEWLIB_SIGNATURE_FORMAT
    string
    default ""


endif

if NEWLIB_USE_LINARO

config NEWLIB_LINARO_PKG_NAME
    string
    default "newlib-linaro"

choice
    bool "Source of newlib-linaro"

config NEWLIB_LINARO_SRC_RELEASE
    bool "Released tarball"
    help
      Download a released tarball.

config NEWLIB_LINARO_SRC_DEVEL
    bool "Vendor/custom repository"
    depends on EXPERIMENTAL
    help
      Check out from a repository.
      Default is the vendor repository at https://git.linaro.org/toolchain/newlib.git

if NEWLIB_LINARO_SRC_DEVEL

choice
    bool "VCS type"
    default NEWLIB_LINARO_DEVEL_VCS_git
    help
      Version control system from which the sources will be checked out.
      The default value points to the development repository for newlib-linaro.

config NEWLIB_LINARO_DEVEL_VCS_git
    bool "Git"

config NEWLIB_LINARO_DEVEL_VCS_svn
    bool "Subversion"

config NEWLIB_LINARO_DEVEL_VCS_hg
    bool "Mercurial"

config NEWLIB_LINARO_DEVEL_VCS_cvs
    bool "CVS"

endchoice

config NEWLIB_LINARO_DEVEL_VCS
    string
    default "git" if NEWLIB_LINARO_DEVEL_VCS_git
    default "svn" if NEWLIB_LINARO_DEVEL_VCS_svn
    default "hg" if NEWLIB_LINARO_DEVEL_VCS_hg
    default "cvs" if NEWLIB_LINARO_DEVEL_VCS_cvs

config NEWLIB_LINARO_DEVEL_URL
    string "Repository URL"
    default "https://git.linaro.org/toolchain/newlib.git"
    help
      Repository URL.

      For CVS, enter both the value of CVS root and the module name, separated
      by a space.

config NEWLIB_LINARO_DEVEL_BRANCH
    string "Branch/tag to check out"
    default ""
    help
      Git/CVS: branch/tag to be checked out
      Subversion: directories to append to the repository URL (i.e. branch or tag)
      Mercurial: official guide recommends using separate repositories to maintain
      stable branches. You likely need to change the repository URL, rather than
      enter anything here.

config NEWLIB_LINARO_DEVEL_REVISION
    string "Revision/changeset"
    default ""
    help
      Commit ID or revision ID to check out.
      Git: enter the commit ID to check out a commit.
      CVS: enter the date in "YYYY/MM/DD HH:MM:SS" format (UTC) to check out certain date.
      Subversion: enter the revision.

config NEWLIB_LINARO_DEVEL_SUBDIR
    string "Subdirectory in the repository"
    default ""
    help
      Some projects produce releases not from the top-level directory in the
      repository, but rather from some subdirectory. If it is the case,
      specify this subdirectory here.

config NEWLIB_LINARO_DEVEL_BOOTSTRAP
    string "Bootstrap command"
    default ""
    help
      Command to run after checking out. Some projects don't store the generated
      files like configure script in the repository; building out of a checked out
      working copy thus requires some extra steps. Separate multiple shell commands
      with &&.

endif

config NEWLIB_LINARO_SRC_CUSTOM
    bool "Custom location"
    depends on EXPERIMENTAL
    help
      Custom directory or tarball.

if NEWLIB_LINARO_SRC_CUSTOM

config NEWLIB_LINARO_CUSTOM_LOCATION
    string "Custom source location"
    help
      Path to the directory or tarball with the sources.

endif

endchoice

choice
    bool "Version of newlib-linaro"
    help
      For a released version, select the version of newlib-linaro to download
      and build. For sources out of the vendor repository or from a custom
      location, select the version that describes those custom sources.
      Based on this version, crosstool-NG may apply some version-specific
      quirks while building newlib-linaro.

config NEWLIB_LINARO_VERY_NEW
    bool "newer than anything below"
    depends on EXPERIMENTAL
    depends on NEWLIB_LINARO_SRC_DEVEL || NEWLIB_LINARO_SRC_CUSTOM
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_LINARO_V_2_2_0_2015
    bool "2.2.0-2015.01 (OBSOLETE) (EXPERIMENTAL)"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    select NEWLIB_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_2_or_older
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_LINARO_V_2_1_0_2014
    bool "2.1.0-2014.09 (OBSOLETE) (EXPERIMENTAL)"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    select NEWLIB_2_2_or_older
    depends on !NEWLIB_REQUIRE_2_2_or_later
    select NEWLIB_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_older
    select NEWLIB_2_0_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_older

config NEWLIB_LINARO_VERY_OLD
    bool "older than anything above"
    depends on OBSOLETE && EXPERIMENTAL
    depends on NEWLIB_LINARO_SRC_DEVEL || NEWLIB_LINARO_SRC_CUSTOM
    depends on !NEWLIB_REQUIRE_2_2_or_later
    depends on !NEWLIB_REQUIRE_2_1_or_later
    depends on !NEWLIB_REQUIRE_2_0_or_later

endchoice


config NEWLIB_LINARO_VERSION
    string
    default "2.2.0-2015.01" if NEWLIB_LINARO_V_2_2_0_2015
    default "2.1.0-2014.09" if NEWLIB_LINARO_V_2_1_0_2014
    default "new" if NEWLIB_LINARO_VERY_NEW
    default "old" if NEWLIB_LINARO_VERY_OLD
    default "unknown"

config NEWLIB_LINARO_MIRRORS
    string
    default "$(CT_Mirrors Linaro newlib ${CT_NEWLIB_LINARO_VERSION})"

config NEWLIB_LINARO_ARCHIVE_FILENAME
    string
    default "@{pkg_name}-@{version}"

config NEWLIB_LINARO_ARCHIVE_DIRNAME
    string
    default "@{pkg_name}-@{version}"

config NEWLIB_LINARO_ARCHIVE_FORMATS
    string
    default ".tar.bz2" if NEWLIB_LINARO_V_2_1_0_2014
    default ".tar.xz"

config NEWLIB_LINARO_SIGNATURE_FORMAT
    string
    default ""


endif


config NEWLIB_2_2_or_later
    bool

config NEWLIB_2_2_or_older
    bool

config NEWLIB_REQUIRE_2_2_or_later
    bool

config NEWLIB_REQUIRE_2_2_or_older
    bool

config NEWLIB_2_1_or_later
    bool

config NEWLIB_2_1_or_older
    bool

config NEWLIB_REQUIRE_2_1_or_later
    bool

config NEWLIB_REQUIRE_2_1_or_older
    bool

config NEWLIB_2_0_or_later
    bool

config NEWLIB_2_0_or_older
    bool

config NEWLIB_REQUIRE_2_0_or_later
    bool

config NEWLIB_REQUIRE_2_0_or_older
    bool

