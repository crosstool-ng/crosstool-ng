#
# DO NOT EDIT! This file is automatically generated.
#

# The component directory name
config BINUTILS_DIR_NAME
    string
    default "binutils"


choice
    bool "Show binutils versions from"

config BINUTILS_USE_GNU
    bool "GNU"
    help
      GNU (which is a recursive acronym for "GNU's Not Unix") provides GNU binutils,
      GNU C Compiler (gcc), GNU debugger (gdb) and many other utilities. GNU is
      considered the master source for these packages.
      
      You should select "GNU" here unless you definitely know that you need some version
      from another source.

config BINUTILS_USE_LINARO
    bool "Linaro"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    help
      Linaro is maintaining some advanced/more stable/experimental versions
      of binutils, gcc, glibc and gdb, especially for the ARM architecture.
      These versions contain some changes that are not (yet?) merged into
      their respective upstream repositories.

endchoice

config BINUTILS_USE
    string
    default "BINUTILS" if BINUTILS_USE_GNU
    default "BINUTILS_LINARO" if BINUTILS_USE_LINARO


if BINUTILS_USE_GNU

config BINUTILS_PKG_NAME
    string
    default "binutils"

choice
    bool "Source of binutils"

config BINUTILS_SRC_RELEASE
    bool "Released tarball"
    help
      Download a released tarball.

config BINUTILS_SRC_DEVEL
    bool "Vendor/custom repository"
    depends on EXPERIMENTAL
    help
      Check out from a repository.
      Default is the vendor repository at git://sourceware.org/git/binutils-gdb.git

if BINUTILS_SRC_DEVEL

choice
    bool "VCS type"
    default BINUTILS_DEVEL_VCS_git
    help
      Version control system from which the sources will be checked out.
      The default value points to the development repository for binutils.

config BINUTILS_DEVEL_VCS_git
    bool "Git"

config BINUTILS_DEVEL_VCS_svn
    bool "Subversion"

config BINUTILS_DEVEL_VCS_hg
    bool "Mercurial"

config BINUTILS_DEVEL_VCS_cvs
    bool "CVS"

endchoice

config BINUTILS_DEVEL_VCS
    string
    default "git" if BINUTILS_DEVEL_VCS_git
    default "svn" if BINUTILS_DEVEL_VCS_svn
    default "hg" if BINUTILS_DEVEL_VCS_hg
    default "cvs" if BINUTILS_DEVEL_VCS_cvs

config BINUTILS_DEVEL_URL
    string "Repository URL"
    default "git://sourceware.org/git/binutils-gdb.git"
    help
      Repository URL.

      For CVS, enter both the value of CVS root and the module name, separated
      by a space.

config BINUTILS_DEVEL_BRANCH
    string "Branch/tag to check out"
    default ""
    help
      Git/CVS: branch/tag to be checked out
      Subversion: directories to append to the repository URL (i.e. branch or tag)
      Mercurial: official guide recommends using separate repositories to maintain
      stable branches. You likely need to change the repository URL, rather than
      enter anything here.

config BINUTILS_DEVEL_REVISION
    string "Revision/changeset"
    default ""
    help
      Commit ID or revision ID to check out.
      Git: enter the commit ID to check out a commit.
      CVS: enter the date in "YYYY/MM/DD HH:MM:SS" format (UTC) to check out certain date.
      Subversion: enter the revision.

config BINUTILS_DEVEL_SUBDIR
    string "Subdirectory in the repository"
    default ""
    help
      Some projects produce releases not from the top-level directory in the
      repository, but rather from some subdirectory. If it is the case,
      specify this subdirectory here.

config BINUTILS_DEVEL_BOOTSTRAP
    string "Bootstrap command"
    default ""
    help
      Command to run after checking out. Some projects don't store the generated
      files like configure script in the repository; building out of a checked out
      working copy thus requires some extra steps. Separate multiple shell commands
      with &&.

endif

config BINUTILS_SRC_CUSTOM
    bool "Custom location"
    depends on EXPERIMENTAL
    help
      Custom directory or tarball.

if BINUTILS_SRC_CUSTOM

config BINUTILS_CUSTOM_LOCATION
    string "Custom source location"
    help
      Path to the directory or tarball with the sources.

endif

endchoice

choice
    bool "Version of binutils"
    help
      For a released version, select the version of binutils to download
      and build. For sources out of the vendor repository or from a custom
      location, select the version that describes those custom sources.
      Based on this version, crosstool-NG may apply some version-specific
      quirks while building binutils.

config BINUTILS_VERY_NEW
    bool "newer than anything below"
    depends on EXPERIMENTAL
    depends on BINUTILS_SRC_DEVEL || BINUTILS_SRC_CUSTOM
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_29_1
    bool "2.29.1"
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_28_1
    bool "2.28.1"
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_27
    bool "2.27"
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_26_1
    bool "2.26.1"
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_25_1
    bool "2.25.1 (OBSOLETE)"
    depends on OBSOLETE
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_24
    bool "2.24 (OBSOLETE)"
    depends on OBSOLETE
    select BINUTILS_2_25_or_older
    depends on !BINUTILS_REQUIRE_2_25_or_later
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_V_2_23_2
    bool "2.23.2 (OBSOLETE)"
    depends on OBSOLETE
    select BINUTILS_2_25_or_older
    depends on !BINUTILS_REQUIRE_2_25_or_later
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_VERY_OLD
    bool "older than anything above"
    depends on OBSOLETE && EXPERIMENTAL
    depends on BINUTILS_SRC_DEVEL || BINUTILS_SRC_CUSTOM
    depends on !BINUTILS_REQUIRE_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_later

endchoice


config BINUTILS_VERSION
    string
    default "2.29.1" if BINUTILS_V_2_29_1
    default "2.28.1" if BINUTILS_V_2_28_1
    default "2.27" if BINUTILS_V_2_27
    default "2.26.1" if BINUTILS_V_2_26_1
    default "2.25.1" if BINUTILS_V_2_25_1
    default "2.24" if BINUTILS_V_2_24
    default "2.23.2" if BINUTILS_V_2_23_2
    default "new" if BINUTILS_VERY_NEW
    default "old" if BINUTILS_VERY_OLD
    default "unknown"

config BINUTILS_MIRRORS
    string
    default "$(CT_Mirrors GNU binutils) $(CT_Mirrors sourceware binutils/releases)"

config BINUTILS_ARCHIVE_FILENAME
    string
    default "@{pkg_name}-@{version}"

config BINUTILS_ARCHIVE_DIRNAME
    string
    default "@{pkg_name}-@{version}"

config BINUTILS_ARCHIVE_FORMATS
    string
    default ".tar.bz2 .tar.gz" if BINUTILS_V_2_27
    default ".tar.bz2 .tar.gz" if BINUTILS_V_2_26_1
    default ".tar.bz2 .tar.gz" if BINUTILS_V_2_25_1
    default ".tar.bz2 .tar.gz" if BINUTILS_V_2_24
    default ".tar.bz2 .tar.gz" if BINUTILS_V_2_23_2
    default ".tar.xz .tar.bz2 .tar.gz"

config BINUTILS_SIGNATURE_FORMAT
    string
    default "packed/.sig"


endif

if BINUTILS_USE_LINARO

config BINUTILS_LINARO_PKG_NAME
    string
    default "binutils-linaro"

choice
    bool "Source of binutils-linaro"

config BINUTILS_LINARO_SRC_RELEASE
    bool "Released tarball"
    help
      Download a released tarball.

config BINUTILS_LINARO_SRC_DEVEL
    bool "Vendor/custom repository"
    depends on EXPERIMENTAL
    help
      Check out from a repository.
      Default is the vendor repository at https://git.linaro.org/toolchain/binutils-gdb.git

if BINUTILS_LINARO_SRC_DEVEL

choice
    bool "VCS type"
    default BINUTILS_LINARO_DEVEL_VCS_git
    help
      Version control system from which the sources will be checked out.
      The default value points to the development repository for binutils-linaro.

config BINUTILS_LINARO_DEVEL_VCS_git
    bool "Git"

config BINUTILS_LINARO_DEVEL_VCS_svn
    bool "Subversion"

config BINUTILS_LINARO_DEVEL_VCS_hg
    bool "Mercurial"

config BINUTILS_LINARO_DEVEL_VCS_cvs
    bool "CVS"

endchoice

config BINUTILS_LINARO_DEVEL_VCS
    string
    default "git" if BINUTILS_LINARO_DEVEL_VCS_git
    default "svn" if BINUTILS_LINARO_DEVEL_VCS_svn
    default "hg" if BINUTILS_LINARO_DEVEL_VCS_hg
    default "cvs" if BINUTILS_LINARO_DEVEL_VCS_cvs

config BINUTILS_LINARO_DEVEL_URL
    string "Repository URL"
    default "https://git.linaro.org/toolchain/binutils-gdb.git"
    help
      Repository URL.

      For CVS, enter both the value of CVS root and the module name, separated
      by a space.

config BINUTILS_LINARO_DEVEL_BRANCH
    string "Branch/tag to check out"
    default ""
    help
      Git/CVS: branch/tag to be checked out
      Subversion: directories to append to the repository URL (i.e. branch or tag)
      Mercurial: official guide recommends using separate repositories to maintain
      stable branches. You likely need to change the repository URL, rather than
      enter anything here.

config BINUTILS_LINARO_DEVEL_REVISION
    string "Revision/changeset"
    default ""
    help
      Commit ID or revision ID to check out.
      Git: enter the commit ID to check out a commit.
      CVS: enter the date in "YYYY/MM/DD HH:MM:SS" format (UTC) to check out certain date.
      Subversion: enter the revision.

config BINUTILS_LINARO_DEVEL_SUBDIR
    string "Subdirectory in the repository"
    default ""
    help
      Some projects produce releases not from the top-level directory in the
      repository, but rather from some subdirectory. If it is the case,
      specify this subdirectory here.

config BINUTILS_LINARO_DEVEL_BOOTSTRAP
    string "Bootstrap command"
    default ""
    help
      Command to run after checking out. Some projects don't store the generated
      files like configure script in the repository; building out of a checked out
      working copy thus requires some extra steps. Separate multiple shell commands
      with &&.

endif

config BINUTILS_LINARO_SRC_CUSTOM
    bool "Custom location"
    depends on EXPERIMENTAL
    help
      Custom directory or tarball.

if BINUTILS_LINARO_SRC_CUSTOM

config BINUTILS_LINARO_CUSTOM_LOCATION
    string "Custom source location"
    help
      Path to the directory or tarball with the sources.

endif

endchoice

choice
    bool "Version of binutils-linaro"
    help
      For a released version, select the version of binutils-linaro to download
      and build. For sources out of the vendor repository or from a custom
      location, select the version that describes those custom sources.
      Based on this version, crosstool-NG may apply some version-specific
      quirks while building binutils-linaro.

config BINUTILS_LINARO_VERY_NEW
    bool "newer than anything below"
    depends on EXPERIMENTAL
    depends on BINUTILS_LINARO_SRC_DEVEL || BINUTILS_LINARO_SRC_CUSTOM
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_LINARO_V_2_25_0_2015_01_2
    bool "2.25.0-2015.01-2 (OBSOLETE) (EXPERIMENTAL)"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    select BINUTILS_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_25_or_older
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_LINARO_V_2_24_0_2014_11_2
    bool "2.24.0-2014.11-2 (OBSOLETE) (EXPERIMENTAL)"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    select BINUTILS_2_25_or_older
    depends on !BINUTILS_REQUIRE_2_25_or_later
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_LINARO_V_2_23_2_2013_10_4
    bool "2.23.2-2013.10-4 (OBSOLETE) (EXPERIMENTAL)"
    depends on OBSOLETE
    depends on EXPERIMENTAL
    select BINUTILS_2_25_or_older
    depends on !BINUTILS_REQUIRE_2_25_or_later
    select BINUTILS_2_23_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_older

config BINUTILS_LINARO_VERY_OLD
    bool "older than anything above"
    depends on OBSOLETE && EXPERIMENTAL
    depends on BINUTILS_LINARO_SRC_DEVEL || BINUTILS_LINARO_SRC_CUSTOM
    depends on !BINUTILS_REQUIRE_2_25_or_later
    depends on !BINUTILS_REQUIRE_2_23_or_later

endchoice


config BINUTILS_LINARO_VERSION
    string
    default "2.25.0-2015.01-2" if BINUTILS_LINARO_V_2_25_0_2015_01_2
    default "2.24.0-2014.11-2" if BINUTILS_LINARO_V_2_24_0_2014_11_2
    default "2.23.2-2013.10-4" if BINUTILS_LINARO_V_2_23_2_2013_10_4
    default "new" if BINUTILS_LINARO_VERY_NEW
    default "old" if BINUTILS_LINARO_VERY_OLD
    default "unknown"

config BINUTILS_LINARO_MIRRORS
    string
    default "$(CT_Mirrors Linaro binutils ${CT_BINUTILS_LINARO_VERSION})"

config BINUTILS_LINARO_ARCHIVE_FILENAME
    string
    default "@{pkg_name}-@{version}"

config BINUTILS_LINARO_ARCHIVE_DIRNAME
    string
    default "@{pkg_name}-@{version}"

config BINUTILS_LINARO_ARCHIVE_FORMATS
    string
    default ".tar.bz2" if BINUTILS_LINARO_V_2_23_2_2013_10_4
    default ".tar.xz"

config BINUTILS_LINARO_SIGNATURE_FORMAT
    string
    default ""


endif


config BINUTILS_2_25_or_later
    bool

config BINUTILS_2_25_or_older
    bool

config BINUTILS_REQUIRE_2_25_or_later
    bool

config BINUTILS_REQUIRE_2_25_or_older
    bool

config BINUTILS_2_23_or_later
    bool

config BINUTILS_2_23_or_older
    bool

config BINUTILS_REQUIRE_2_23_or_later
    bool

config BINUTILS_REQUIRE_2_23_or_older
    bool

