#
# DO NOT EDIT! This file is automatically generated.
#

# The component directory name
config LIBICONV_DIR_NAME
    string
    default "libiconv"



config LIBICONV_PKG_NAME
    string
    default "libiconv"

choice
    bool "Source of libiconv"

config LIBICONV_SRC_RELEASE
    bool "Released tarball"
    help
      Download a released tarball.

config LIBICONV_SRC_DEVEL
    bool "Vendor/custom repository"
    depends on EXPERIMENTAL
    help
      Check out from a repository.
      Default is the vendor repository at https://git.savannah.gnu.org/git/libiconv.git

if LIBICONV_SRC_DEVEL

choice
    bool "VCS type"
    default LIBICONV_DEVEL_VCS_git
    help
      Version control system from which the sources will be checked out.
      The default value points to the development repository for libiconv.

config LIBICONV_DEVEL_VCS_git
    bool "Git"

config LIBICONV_DEVEL_VCS_svn
    bool "Subversion"

config LIBICONV_DEVEL_VCS_hg
    bool "Mercurial"

config LIBICONV_DEVEL_VCS_cvs
    bool "CVS"

endchoice

config LIBICONV_DEVEL_VCS
    string
    default "git" if LIBICONV_DEVEL_VCS_git
    default "svn" if LIBICONV_DEVEL_VCS_svn
    default "hg" if LIBICONV_DEVEL_VCS_hg
    default "cvs" if LIBICONV_DEVEL_VCS_cvs

config LIBICONV_DEVEL_URL
    string "Repository URL"
    default "https://git.savannah.gnu.org/git/libiconv.git"
    help
      Repository URL.

      For CVS, enter both the value of CVS root and the module name, separated
      by a space.

config LIBICONV_DEVEL_BRANCH
    string "Branch/tag to check out"
    default ""
    help
      Git/CVS: branch/tag to be checked out
      Subversion: directories to append to the repository URL (i.e. branch or tag)
      Mercurial: official guide recommends using separate repositories to maintain
      stable branches. You likely need to change the repository URL, rather than
      enter anything here.

config LIBICONV_DEVEL_REVISION
    string "Revision/changeset"
    default ""
    help
      Commit ID or revision ID to check out.
      Git: enter the commit ID to check out a commit.
      CVS: enter the date in "YYYY/MM/DD HH:MM:SS" format (UTC) to check out certain date.
      Subversion: enter the revision.

config LIBICONV_DEVEL_SUBDIR
    string "Subdirectory in the repository"
    default ""
    help
      Some projects produce releases not from the top-level directory in the
      repository, but rather from some subdirectory. If it is the case,
      specify this subdirectory here.

config LIBICONV_DEVEL_BOOTSTRAP
    string "Bootstrap command"
    default "./autogen.sh"
    help
      Command to run after checking out. Some projects don't store the generated
      files like configure script in the repository; building out of a checked out
      working copy thus requires some extra steps. Separate multiple shell commands
      with &&.

endif

config LIBICONV_SRC_CUSTOM
    bool "Custom location"
    depends on EXPERIMENTAL
    help
      Custom directory or tarball.

if LIBICONV_SRC_CUSTOM

config LIBICONV_CUSTOM_LOCATION
    string "Custom source location"
    help
      Path to the directory or tarball with the sources.

endif

endchoice

choice
    bool "Version of libiconv"
    help
      For a released version, select the version of libiconv to download
      and build. For sources out of the vendor repository or from a custom
      location, select the version that describes those custom sources.
      Based on this version, crosstool-NG may apply some version-specific
      quirks while building libiconv.

config LIBICONV_VERY_NEW
    bool "newer than anything below"
    depends on EXPERIMENTAL
    depends on LIBICONV_SRC_DEVEL || LIBICONV_SRC_CUSTOM

config LIBICONV_V_1_15
    bool "1.15"

config LIBICONV_V_1_14
    bool "1.14 (OBSOLETE)"
    depends on OBSOLETE

config LIBICONV_VERY_OLD
    bool "older than anything above"
    depends on OBSOLETE && EXPERIMENTAL
    depends on LIBICONV_SRC_DEVEL || LIBICONV_SRC_CUSTOM

endchoice


config LIBICONV_VERSION
    string
    default "1.15" if LIBICONV_V_1_15
    default "1.14" if LIBICONV_V_1_14
    default "new" if LIBICONV_VERY_NEW
    default "old" if LIBICONV_VERY_OLD
    default "unknown"

config LIBICONV_MIRRORS
    string
    default "$(CT_Mirrors GNU libiconv)"

config LIBICONV_ARCHIVE_FILENAME
    string
    default "@{pkg_name}-@{version}"

config LIBICONV_ARCHIVE_DIRNAME
    string
    default "@{pkg_name}-@{version}"

config LIBICONV_ARCHIVE_FORMATS
    string
    default ".tar.gz"

config LIBICONV_SIGNATURE_FORMAT
    string
    default "packed/.sig"




