#
# DO NOT EDIT! This file is automatically generated.
#

choice GEN_CHOICE_LIBC
    bool "C library"

config LIBC_AVR_LIBC
    bool "avr-libc"
    depends on ARCH_AVR
    depends on ! LINUX && ! WINDOWS && BARE_METAL
    select LIBC_SUPPORT_THREADS_NONE
    help
      The AVR Libc package provides a subset of the standard C library for
      Atmel AVR 8-bit RISC microcontrollers. In addition, the library
      provides the basic startup code needed by most applications.
    
config LIBC_BIONIC
    bool "bionic"
    depends on ! WINDOWS && ! BARE_METAL
    depends on ARCH_ARM || ARCH_MIPS || ARCH_X86
    depends on EXPERIMENTAL
    select GCC_REQUIRE_6_or_later
    select LIBC_SUPPORT_THREADS_POSIX
    help
      Bionic is the Android C library. It is prebuilt, extracted from the Android NDK.
      This platform has no TLS (Thread Local Storage) support so that option must be
      disabled in the Compiler options.
    
config LIBC_GLIBC
    bool "glibc"
    depends on ! WINDOWS && ! BARE_METAL && ARCH_USE_MMU
    select LIBC_SUPPORT_THREADS_NATIVE
    select CC_CORE_PASSES_NEEDED
    select GETTEXT_NEEDED
    select BINUTILS_FORCE_LD_BFD_DEFAULT
    help
      The de-facto standard for Linux distributions.
      Feature-rich, but large...  Most useful for desktop-like systems.
    
config LIBC_MINGW_W64
    bool "mingw-w64"
    depends on WINDOWS
    select LIBC_SUPPORT_THREADS_NATIVE
    select LIBC_SUPPORT_THREADS_POSIX
    select CC_CORE_PASS_2_NEEDED
    help
      The de-facto standard for Mingw distributions.
    
config LIBC_MUSL
    bool "musl"
    depends on ! WINDOWS && ! BARE_METAL
    depends on EXPERIMENTAL
    select LIBC_SUPPORT_THREADS_NATIVE
    select CC_CORE_PASSES_NEEDED
    help
      Musl is a new standard library to power a new generation of Linux-based
      devices. musl is lightweight, fast, simple, free, and strives to be
      correct in the sense of standards-conformance and safety.
    
config LIBC_NEWLIB
    bool "newlib"
    depends on BARE_METAL
    select LIBC_SUPPORT_THREADS_NONE
    select CC_CORE_PASSES_NEEDED if CANADIAN
    select CC_CORE_PASS_2_NEEDED if ! CANADIAN
    help
      Newlib is a C library intended for use on embedded systems. It is a
      conglomeration of several library parts, all under free software
      licenses that make them easily usable on embedded products. Newlib
      is only available in source form. It can be compiled for a wide
      array of processors, and will usually work on any architecture with
      the addition of a few low-level routines.
    
config LIBC_NONE
    bool "none"
    depends on BARE_METAL
    help
      Do not use a C library.
      This is useful if your project is self-contained, does not rely on
      an external C library, and provides all the necessary bits.
      Most probably useful to bootloaders, as they generally don't depend
      on the C library.
      If unsure: do *not* choose that, and use another option in the choice.
    
config LIBC_UCLIBC
    bool "uClibc"
    depends on ! WINDOWS && ! BARE_METAL
    select LIBC_SUPPORT_THREADS_LT
    select LIBC_SUPPORT_THREADS_NONE
    select LIBC_SUPPORT_THREADS_NATIVE if UCLIBC_0_9_33_2_or_later
    select CC_CORE_PASSES_NEEDED
    help
      The de-facto standard for embeded linux systems.
      Highly configurable, thus as feature-rich as you
      need, without compromising for size.
    
endchoice

config LIBC
    string
    default "avr-libc" if LIBC_AVR_LIBC
    default "bionic" if LIBC_BIONIC
    default "glibc" if LIBC_GLIBC
    default "mingw-w64" if LIBC_MINGW_W64
    default "musl" if LIBC_MUSL
    default "newlib" if LIBC_NEWLIB
    default "none" if LIBC_NONE
    default "uClibc" if LIBC_UCLIBC

config LIBC_CHOICE_KSYM
    string
    default "AVR_LIBC" if LIBC_AVR_LIBC
    default "BIONIC" if LIBC_BIONIC
    default "GLIBC" if LIBC_GLIBC
    default "MINGW_W64" if LIBC_MINGW_W64
    default "MUSL" if LIBC_MUSL
    default "NEWLIB" if LIBC_NEWLIB
    default "NONE" if LIBC_NONE
    default "UCLIBC" if LIBC_UCLIBC

if LIBC_AVR_LIBC
config LIBC_AVR_LIBC_PKG_KSYM
    string
    default "AVR_LIBC"

source "config/versions/avr-libc.in"
source "config/libc/avr-libc.in"
endif

if LIBC_BIONIC
config LIBC_BIONIC_PKG_KSYM
    string
    default "ANDROID_NDK"

source "config/versions/android-ndk.in"
source "config/libc/bionic.in"
endif

if LIBC_GLIBC
config LIBC_GLIBC_PKG_KSYM
    string
    default "GLIBC"

source "config/versions/glibc.in"
source "config/libc/glibc.in"
endif

if LIBC_MINGW_W64
config LIBC_MINGW_W64_PKG_KSYM
    string
    default "MINGW_W64"

source "config/versions/mingw-w64.in"
source "config/libc/mingw-w64.in"
endif

if LIBC_MUSL
config LIBC_MUSL_PKG_KSYM
    string
    default "MUSL"

source "config/versions/musl.in"
source "config/libc/musl.in"
endif

if LIBC_NEWLIB
config LIBC_NEWLIB_PKG_KSYM
    string
    default "NEWLIB"

source "config/versions/newlib.in"
source "config/libc/newlib.in"
endif

if LIBC_NONE
config LIBC_NONE_PKG_KSYM
    string
    default ""

source "config/libc/none.in"
endif

if LIBC_UCLIBC
config LIBC_UCLIBC_PKG_KSYM
    string
    default "UCLIBC"

source "config/versions/uClibc.in"
source "config/libc/uClibc.in"
endif

