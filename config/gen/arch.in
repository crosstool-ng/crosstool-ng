#
# DO NOT EDIT! This file is automatically generated.
#

choice GEN_CHOICE_ARCH
    bool "Target Architecture"

config ARCH_ALPHA
    bool "alpha"
    select ARCH_SUPPORTS_32
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_SUPPORTS_WITH_TUNE
    help
      The Alpha architecture.
    
config ARCH_ARM
    bool "arm"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_SUPPORTS_BOTH_MMU
    select ARCH_DEFAULT_HAS_MMU
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_LE
    select ARCH_SUPPORTS_WITH_ARCH
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_EXCLUSIVE_WITH_CPU
    select ARCH_SUPPORTS_WITH_TUNE
    select ARCH_SUPPORTS_WITH_FLOAT if ARCH_32
    select ARCH_SUPPORTS_WITH_FPU if ARCH_32
    select ARCH_SUPPORTS_SOFTFP if ARCH_32
    help
      The ARM architecture, as defined by:
          http://www.arm.com/
    
config ARCH_AVR
    bool "avr"
    select ARCH_SUPPORTS_8
    select ARCH_DEFAULT_8
    select ARCH_REQUIRES_MULTILIB
    help
      The 8-bit AVR architecture, as defined by:
          http://www.atmel.com/products/microcontrollers/avr
    
config ARCH_M68K
    bool "m68k"
    select ARCH_SUPPORTS_32
    select ARCH_DEFAULT_32
    select ARCH_DEFAULT_BE
    select ARCH_SUPPORTS_WITH_CPU
    help
      The m68k architecture
    
config ARCH_MICROBLAZE
    bool "microblaze"
    depends on EXPERIMENTAL
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_FLOAT_SW
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_BE
    select ARCH_SUPPORTS_BOTH_MMU
    select ARCH_DEFAULT_HAS_MMU
    help
      The MicroBlaze architecture, as defined by:
          http://www.xilinx.com/
      Upstream projects do not currently provide
      full support for the microblaze architecture
      and as such, this is marked as EXPERIMENTAL
      for CT-NG.
      Support is being added for a modern gcc,
      binutils and gdb along with nptl threading
      in glibc for microblaze.
    
config ARCH_MIPS
    bool "mips"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_BE
    select ARCH_SUPPORTS_WITH_ARCH
    select ARCH_SUPPORTS_WITH_TUNE
    select ARCH_SUPPORTS_WITH_FLOAT
    help
      The MIPS architecture, as defined by:
          http://www.mips.com/
    
config ARCH_MSP430
    bool "msp430"
    select ARCH_SUPPORTS_16
    select ARCH_DEFAULT_16
    select ARCH_REQUIRES_MULTILIB
    depends on EXPERIMENTAL
    help
      The 16-bit MSP430 architecture, as defined by:
          http://www.ti.com/lsds/ti/microcontrollers-16-bit-32-bit/msp/overview.page?HQS=msp430
    
config ARCH_NIOS2
    bool "nios2"
    select ARCH_SUPPORTS_32
    select ARCH_DEFAULT_32
    select ARCH_SUPPORTS_BOTH_MMU
    select ARCH_DEFAULT_LE
    select ARCH_SUPPORTS_WITH_ARCH
    help
      The NIOS2 architecture, as defined by:
          http://www.altera.com
    
config ARCH_POWERPC
    bool "powerpc"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_BE
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_WITH_ABI
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_SUPPORTS_WITH_TUNE
    select ARCH_SUPPORTS_WITH_FLOAT
    help
      The PowerPC architecture, as defined by:
          http://www.ibm.com/developerworks/eserver/articles/archguide.html
    
config ARCH_RISCV
    bool "riscv"
    depends on EXPERIMENTAL
    select ARCH_SUPPORTS_32
    select ARCH_DEFAULT_32
    select GCC_REQUIRE_7_or_later
    help
      The RISC-V architecture, as defined by:
          http://www.riscv.org/
    
config ARCH_S390
    bool "s390"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_WITH_FPU
    help
      Defined by IBM in:
          32-bit ESA/390       : http://publibfp.boulder.ibm.com/cgi-bin/bookmgr/BOOKS/dz9ar008/CCONTENTS
          64-bit z/Architecure : http://publibfp.boulder.ibm.com/cgi-bin/bookmgr/BOOKS/dz9zr002/CCONTENTS
    
config ARCH_SH
    bool "sh"
    select ARCH_SUPPORTS_32
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_LE
    select ARCH_REQUIRES_MULTILIB
    select ARCH_SUPPORTS_WITH_ENDIAN
    help
      The Super-H architecture, as defined by:
          http://www.renesas.com/fmwk.jsp?cnt=superh_family_landing.jsp&fp=/products/mpumcu/superh_family/
    
config ARCH_SPARC
    bool "sparc"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_SUPPORTS_WITH_TUNE
    select ARCH_SUPPORTS_WITH_FLOAT
    help
      The SUN SPARC architecture, as defined by:
          32 bit: http://www.sparc.org/standards/V8.pdf
          64 bit: http://www.sparc.org/standards/SPARCV9.pdf
    
config ARCH_X86
    bool "x86"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_64
    select ARCH_DEFAULT_32
    select ARCH_USE_MMU
    select ARCH_SUPPORTS_WITH_ARCH
    select ARCH_SUPPORTS_WITH_CPU
    select ARCH_SUPPORTS_WITH_TUNE
    help
      The x86 architecture, as defined by:
          32-bit (ia32) : http://www.intel.com/
          64-bit (amd64): http://www.amd.com/us-en/Processors/DevelopWithAMD/0,,30_2252_875_7044,00.html
    
config ARCH_XTENSA
    bool "xtensa"
    select ARCH_SUPPORTS_32
    select ARCH_SUPPORTS_EITHER_ENDIAN
    select ARCH_DEFAULT_LE
    select ARCH_SUPPORTS_BOTH_MMU
    select ARCH_DEFAULT_HAS_MMU
    help
      The xtensa architecture
         Xtensa is a configurable and extensible processor architecture.
         Supporting a specific configuration typically requires minor
         modifications to a small set of configuration files in various
         development tools. This process is automated and only requires
         a configuration specific 'overlay' file.
         For a custom configuration, select the XTENSA_CUSTOM option and
         provide the name of the processor configuration through the
         CT_ARCH_XTENSA_CUSTOM_NAME option.
         The default option (ARCH_xtensa_fsf) uses a built-in configuration,
         which may or may not work for a particular Xtensa processor.
    
endchoice

config ARCH
    string
    default "alpha" if ARCH_ALPHA
    default "arm" if ARCH_ARM
    default "avr" if ARCH_AVR
    default "m68k" if ARCH_M68K
    default "microblaze" if ARCH_MICROBLAZE
    default "mips" if ARCH_MIPS
    default "msp430" if ARCH_MSP430
    default "nios2" if ARCH_NIOS2
    default "powerpc" if ARCH_POWERPC
    default "riscv" if ARCH_RISCV
    default "s390" if ARCH_S390
    default "sh" if ARCH_SH
    default "sparc" if ARCH_SPARC
    default "x86" if ARCH_X86
    default "xtensa" if ARCH_XTENSA

config ARCH_CHOICE_KSYM
    string
    default "ALPHA" if ARCH_ALPHA
    default "ARM" if ARCH_ARM
    default "AVR" if ARCH_AVR
    default "M68K" if ARCH_M68K
    default "MICROBLAZE" if ARCH_MICROBLAZE
    default "MIPS" if ARCH_MIPS
    default "MSP430" if ARCH_MSP430
    default "NIOS2" if ARCH_NIOS2
    default "POWERPC" if ARCH_POWERPC
    default "RISCV" if ARCH_RISCV
    default "S390" if ARCH_S390
    default "SH" if ARCH_SH
    default "SPARC" if ARCH_SPARC
    default "X86" if ARCH_X86
    default "XTENSA" if ARCH_XTENSA

if ARCH_ALPHA
config ARCH_ALPHA_PKG_KSYM
    string
    default ""

source "config/arch/alpha.in"
endif

if ARCH_ARM
config ARCH_ARM_PKG_KSYM
    string
    default ""

source "config/arch/arm.in"
endif

if ARCH_AVR
config ARCH_AVR_PKG_KSYM
    string
    default ""

source "config/arch/avr.in"
endif

if ARCH_M68K
config ARCH_M68K_PKG_KSYM
    string
    default ""

source "config/arch/m68k.in"
endif

if ARCH_MICROBLAZE
config ARCH_MICROBLAZE_PKG_KSYM
    string
    default ""

source "config/arch/microblaze.in"
endif

if ARCH_MIPS
config ARCH_MIPS_PKG_KSYM
    string
    default ""

source "config/arch/mips.in"
endif

if ARCH_MSP430
config ARCH_MSP430_PKG_KSYM
    string
    default ""

source "config/arch/msp430.in"
endif

if ARCH_NIOS2
config ARCH_NIOS2_PKG_KSYM
    string
    default ""

source "config/arch/nios2.in"
endif

if ARCH_POWERPC
config ARCH_POWERPC_PKG_KSYM
    string
    default ""

source "config/arch/powerpc.in"
endif

if ARCH_RISCV
config ARCH_RISCV_PKG_KSYM
    string
    default ""

source "config/arch/riscv.in"
endif

if ARCH_S390
config ARCH_S390_PKG_KSYM
    string
    default ""

source "config/arch/s390.in"
endif

if ARCH_SH
config ARCH_SH_PKG_KSYM
    string
    default ""

source "config/arch/sh.in"
endif

if ARCH_SPARC
config ARCH_SPARC_PKG_KSYM
    string
    default ""

source "config/arch/sparc.in"
endif

if ARCH_X86
config ARCH_X86_PKG_KSYM
    string
    default ""

source "config/arch/x86.in"
endif

if ARCH_XTENSA
config ARCH_XTENSA_PKG_KSYM
    string
    default ""

source "config/arch/xtensa.in"
endif

